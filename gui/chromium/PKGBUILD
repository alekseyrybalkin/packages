pkgname=chromium
pkgver=83.0.4103.116
vcs=git
gittag=${pkgver}
extra_urls="somethere/node_modules-${pkgver}.tar.gz"
relmon_id=13344

# updating node_modules:
# git apply ~/.data/ventures/jinni/clean_json_attrs.diff
# cd third_party/node
# ./update_npm_deps

_check_and_clone_deps() {
    echo "vars = {}" > deps.py
    echo "" >> deps.py
    echo "def Var(key):" >> deps.py
    echo "    return vars[key]" >> deps.py
    echo "" >> deps.py
    cat ${1} >> deps.py

    cp ${srcdir}/../prepare_deps.py .
    python prepare_deps.py $(dirname `find_vcs_repo chromium`)

    bash filldeps.sh
    rm filldeps.sh prepare_deps.py deps.py
}

build() {
    cp ../gclient_args.gni build/config/

    cd third_party/node/
    tar xf ${TARBALLS_HOME}/node_modules-${pkgver}.tar.gz
    cd ../../

    # Allow building against system libraries in official builds
    sed -i 's/OFFICIAL_BUILD/GOOGLE_CHROME_BUILD/' \
        tools/generate_shim_headers/generate_shim_headers.py

    # https://chromium-review.googlesource.com/c/chromium/src/+/2145261
    # Clean up a call to set_utf8().
    git cherry-pick ede390a0b18e4565abf8ac1e1ff717e1d43fc320

    # https://chromium-review.googlesource.com/c/chromium/src/+/2153111
    # [PM] Add calculation for age score
    git cherry-pick 72ce65b031d1eb22c3be465fd38e39f5662face3
    # IWYU: std::numeric_limits is defined in limits
    git cherry-pick 74f76a6be385ef056b0be2362c32c728141cca16

    # https://chromium-review.googlesource.com/c/chromium/src/+/2152333
    # Add missing algorithm header in crx_install_error.cc
    git cherry-pick 2b9d6daa0ab5ce45ec5555466d5a5a583a020ea8

    # https://chromium-review.googlesource.com/c/chromium/src/+/2132403
    # libstdc++: fix incomplete-type in AXTree for NodeSetSizePosInSetInfo
    git cherry-pick aeef68888d4c00b69facead2b934095a8cd17329

    # https://chromium-review.googlesource.com/c/chromium/src/+/2164645
    # from 40d994e4aa2e4d5077c1810e4623549618a19c05
    # Include "memory" header to get the definition of std::unique_ptr.
    sed -i -e '/#include "base\/optional.h"/i #include <memory>' third_party/blink/renderer/core/html/trust_token_attribute_parsing.h

    # https://chromium-review.googlesource.com/c/chromium/src/+/2174199
    # Make some of blink custom iterators STL compatible.
    git cherry-pick d3cabbc7321d349a9bffda482df5afc0d4df1ac2

    # https://chromium-review.googlesource.com/c/chromium/src/+/2094496
    # ServiceWorker: Avoid double destruction of ServiceWorkerObjectHost on connection error
    git cherry-pick bd59ce32629ef684624821419c43967b73d2989e

    # GCC 10
    sed -i -e '/class GURL;/i #include <cstddef>' chrome/browser/search/background/ntp_backgrounds.h
    sed -i -e '/namespace ui {/i #include <cstdint>' ui/gfx/linux/drm_util_linux.h

    # https://chromium-review.googlesource.com/c/chromium/src/+/2268221
    # Force mp3 files to have a start time of zero.
    git cherry-pick 192fc3899f76e9487d77895f31df8d2d13bf9619

    # Fix GL on fluxbox
    patch -Np1 -i ../gl_visual_info.patch

    # Use system clang-format (workaround for no network build)
    patch -Np1 -i ../clang_format.patch

    # https://crbug.com/893950
    sed -i -e 's/\<xmlMalloc\>/malloc/' -e 's/\<xmlFree\>/free/' \
        third_party/blink/renderer/core/xml/*.cc \
        third_party/blink/renderer/core/xml/parser/xml_document_parser.cc \
        third_party/libxml/chromium/*.cc

    _check_and_clone_deps DEPS

    cd third_party/angle
    _check_and_clone_deps DEPS
    cd ../../

    cd third_party/openscreen/src
    _check_and_clone_deps DEPS
    cd ../../../

    cd buildtools
    _check_and_clone_deps DEPS
    cd ../

    python2 build/util/lastchange.py -o build/util/LASTCHANGE
    cp build/util/LASTCHANGE{,.blink}
    python2 build/util/lastchange.py -m GPU_LISTS_VERSION --revision-id-only --header gpu/config/gpu_lists_version.h
    python2 build/util/lastchange.py -m SKIA_COMMIT_HASH -s third_party/skia --header skia/ext/skia_commit_hash.h
    git log -1 --format='%ct' --grep=^Change-Id: HEAD > build/util/LASTCHANGE.committime
    rm -rf .git

    patch -Np0 -i ../chromium-skia-harmony.patch

    # GCC 10
    sed -i -e '/namespace webrtc {/i #include <cstddef>' third_party/webrtc/modules/audio_processing/aec3/clockdrift_detector.h
    sed -i -e '/#include "call\/rtp_packet_sink_interface.h"/i #include <cstdint>' third_party/webrtc/call/rtx_receive_stream.h

    # fix "ERROR at //device/vr/buildflags/buildflags.gni:22:19: Undefined identifier"
    sed -i -e 's/checkout_openxr/false/g' device/vr/buildflags/buildflags.gni

    # fix "ERROR at //third_party/google_benchmark/buildconfig.gni:10:30: Undefined identifier"
    sed -i -e 's/checkout_google_benchmark/false/g' third_party/google_benchmark/buildconfig.gni

    # Force script incompatible with Python 3 to use /usr/bin/python2
    sed -i '1s|python$|&2|' third_party/dom_distiller_js/protoc_plugins/*.py

    mkdir -p third_party/node/linux/node-linux-x64/bin
    ln -s /usr/bin/node third_party/node/linux/node-linux-x64/bin/

    export CCACHE_SLOPPINESS=time_macros
    export CC=clang
    export CXX=clang++
    export AR=llvm-ar
    export NM=nm

    export PATH=${PATH}:/usr/lib/openjdk/bin
    export TMPDIR=${srcdir}/temp
    mkdir -p ${TMPDIR}

    GN_CONFIG=(
        'custom_toolchain="//build/toolchain/linux/unbundle:default"'
        'host_toolchain="//build/toolchain/linux/unbundle:default"'
        'clang_use_chrome_plugins=false'
        'clang_use_default_sample_profile=false'
        'is_official_build=true'
        'treat_warnings_as_errors=false'
        'fieldtrial_testing_like_official_build=true'
        'ffmpeg_branding="Chrome"'
        'proprietary_codecs=true'
        'use_vaapi=true'
        'rtc_use_pipewire=false'
        'rtc_link_pipewire=false'
        'link_pulseaudio=false'
        'use_gnome_keyring=false'
        'use_sysroot=false'
        'linux_use_bundled_binutils=false'
        'use_custom_libcxx=false'
        'enable_hangout_services_extension=false'
        'enable_widevine=false'
        'enable_nacl=false'
        'enable_swiftshader=false'
        'use_kerberos=false'
        'use_libpci=false'
        'use_pulseaudio=false'
        'symbol_level=0'
    )

    # Facilitate deterministic builds (taken from build/config/compiler/BUILD.gn)
    CFLAGS+='   -Wno-builtin-macro-redefined'
    CXXFLAGS+=' -Wno-builtin-macro-redefined'
    CPPFLAGS+=' -D__DATE__=  -D__TIME__=  -D__TIMESTAMP__='

    # Do not warn about unknown warning options
    CFLAGS+='   -Wno-unknown-warning-option'
    CXXFLAGS+=' -Wno-unknown-warning-option'

    gn gen out/Release --args="${GN_CONFIG[*]}" --script-executable=/usr/bin/python2
    ninja -C out/Release chrome chrome_sandbox chromedriver
}

package() {
    mkdir -p ${pkgdir}/usr/bin ${pkgdir}/usr/lib/chromium/locales

    install -vDm755  out/Release/chrome ${pkgdir}/usr/lib/chromium/chromium
    install -vDm4755 out/Release/chrome_sandbox ${pkgdir}/usr/lib/chromium/chrome-sandbox
    install -vDm755  out/Release/chromedriver ${pkgdir}/usr/lib/chromium/chromedriver
    ln -svf /usr/lib/chromium/chromium ${pkgdir}/usr/bin
    ln -svf /usr/lib/chromium/chromedriver ${pkgdir}/usr/bin/

    install -vm644 out/Release/icudtl.dat ${pkgdir}/usr/lib/chromium/
    install -vm644 out/Release/{*.pak,*.bin} ${pkgdir}/usr/lib/chromium/
    install -vm644 out/Release/locales/*.pak ${pkgdir}/usr/lib/chromium/locales/
}
